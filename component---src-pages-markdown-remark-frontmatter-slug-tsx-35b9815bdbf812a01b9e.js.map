{"version":3,"sources":["webpack:///./src/pages/{MarkdownRemark.frontmatter__slug}.tsx"],"names":["Template","markdownRemark","data","frontmatter","html","className","title","date","dangerouslySetInnerHTML","__html"],"mappings":"6FAAA,wEAae,SAASA,EAAT,GAEE,IACPC,EADO,EADfC,KAEQD,eACAE,EAAsBF,EAAtBE,YAAaC,EAASH,EAATG,KACrB,OACE,yBAAKC,UAAU,uBACf,yBAAKA,UAAU,aACb,4BAAKF,EAAYG,OACjB,4BAAKH,EAAYI,MACjB,yBACEF,UAAU,oBACVG,wBAAyB,CAAEC,OAAQL","file":"component---src-pages-markdown-remark-frontmatter-slug-tsx-35b9815bdbf812a01b9e.js","sourcesContent":["import React from \"react\"\nimport { graphql } from \"gatsby\"\n\ntype Data = {\n  markdownRemark: {\n    frontmatter: {\n      title: string\n      date: string\n    }\n    html: string\n  }\n}\n\nexport default function Template({\n  data, // this prop will be injected by the GraphQL query below.\n}: {data: Data}) {\n  const { markdownRemark } = data // data.markdownRemark holds your post data\n  const { frontmatter, html } = markdownRemark\n  return (\n    <div className=\"blog-post-container\">\n    <div className=\"blog-post\">\n      <h1>{frontmatter.title}</h1>\n      <h2>{frontmatter.date}</h2>\n      <div\n        className=\"blog-post-content\"\n        dangerouslySetInnerHTML={{ __html: html }}\n      />\n    </div>\n  </div>\n  )\n}\n\nexport const pageQuery = graphql`\n  query($id: String!) {\n    markdownRemark(id: { eq: $id }) {\n      html\n      frontmatter {\n        date(formatString: \"YYYY/MM/DD\")\n        slug\n        title\n      }\n    }\n  }\n`"],"sourceRoot":""}